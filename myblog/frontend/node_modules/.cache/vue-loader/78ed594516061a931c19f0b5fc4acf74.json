{"remainingRequest":"/Users/toshiya/Library/Mobile Documents/com~apple~CloudDocs/docs/Python/Django/mysite/myblog/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/toshiya/Library/Mobile Documents/com~apple~CloudDocs/docs/Python/Django/mysite/myblog/frontend/src/components/PostList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/toshiya/Library/Mobile Documents/com~apple~CloudDocs/docs/Python/Django/mysite/myblog/frontend/src/components/PostList.vue","mtime":1633782457282},{"path":"/Users/toshiya/Library/Mobile Documents/com~apple~CloudDocs/docs/Python/Django/mysite/myblog/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633954957055},{"path":"/Users/toshiya/Library/Mobile Documents/com~apple~CloudDocs/docs/Python/Django/mysite/myblog/frontend/node_modules/babel-loader/lib/index.js","mtime":1633954957864},{"path":"/Users/toshiya/Library/Mobile Documents/com~apple~CloudDocs/docs/Python/Django/mysite/myblog/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633954957055},{"path":"/Users/toshiya/Library/Mobile Documents/com~apple~CloudDocs/docs/Python/Django/mysite/myblog/frontend/node_modules/vue-loader/lib/index.js","mtime":1633954958139}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVycywgbWFwQWN0aW9uc30gZnJvbSAndnVleCcKaW1wb3J0IHtVUERBVEVfUE9TVFN9IGZyb20gIkAvc3RvcmUvbXV0YXRpb24tdHlwZXMiOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ3Bvc3QtbGlzdCcsCiAgICB3YXRjaDogewogICAgICAgICckcm91dGUnKCkgewogICAgICAgICAgICB0aGlzLmdldFBvc3RzKCkKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLmdldFBvc3RzKCkKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIGRvY3VtZW50LnRpdGxlID0gYOODluODreOCsGAKICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9ImRlc2NyaXB0aW9uIl0nKS5zZXRBdHRyaWJ1dGUoJ2NvbnRlbnQnLCAn5pel44CF44Gu6ZuR6KiY44OW44Ot44KwJykKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcEdldHRlcnMoWwogICAgICAgICAgICAncG9zdExpc3QnLCAncG9zdENvdW50JywgJ3Bvc3RSYW5nZUZpcnN0JywgJ3Bvc3RSYW5nZUxhc3QnLAogICAgICAgICAgICAncG9zdEN1cnJlbnRQYWdlTnVtYmVyJywgJ2hhc1ByZXZpb3VzJywgJ2hhc05leHQnLCAnZ2V0UHJldmlvdXNVUkwnLCAnZ2V0TmV4dFVSTCcKICAgICAgICBdKSwKICAgICAgICBnZXRLZXkoKSB7CiAgICAgICAgICAgIHJldHVybiBgJHt0aGlzLnBvc3RDdXJyZW50UGFnZU51bWJlcn0gJHt0aGlzLiRyb3V0ZS5xdWVyeS5rZXl3b3JkfSAke3RoaXMuJHJvdXRlLnF1ZXJ5LmNhdGVnb3J5fWAKICAgICAgICB9LAogICAgICAgIGdldFBvc3RQcmV2aW91c1VSTCgpIHsKICAgICAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTCh0aGlzLmdldFByZXZpb3VzVVJMKQogICAgICAgICAgICBjb25zdCBrZXl3b3JkID0gdXJsLnNlYXJjaFBhcmFtcy5nZXQoJ2tleXdvcmQnKSB8fCAnJwogICAgICAgICAgICBjb25zdCBjYXRlZ29yeSA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KCdjYXRlZ29yeScpIHx8ICcnCiAgICAgICAgICAgIGNvbnN0IHBhZ2UgPSB1cmwuc2VhcmNoUGFyYW1zLmdldCgncGFnZScpIHx8IDEKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlci5yZXNvbHZlKHsKICAgICAgICAgICAgICAgIG5hbWU6ICdwb3N0cycsCiAgICAgICAgICAgICAgICBxdWVyeToge2tleXdvcmQsIGNhdGVnb3J5LCBwYWdlfQogICAgICAgICAgICB9KS5yb3V0ZS5mdWxsUGF0aAogICAgICAgIH0sCiAgICAgICAgZ2V0UG9zdE5leHRVUkwoKSB7CiAgICAgICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwodGhpcy5nZXROZXh0VVJMKQogICAgICAgICAgICBjb25zdCBrZXl3b3JkID0gdXJsLnNlYXJjaFBhcmFtcy5nZXQoJ2tleXdvcmQnKSB8fCAnJwogICAgICAgICAgICBjb25zdCBjYXRlZ29yeSA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KCdjYXRlZ29yeScpIHx8ICcnCiAgICAgICAgICAgIGNvbnN0IHBhZ2UgPSB1cmwuc2VhcmNoUGFyYW1zLmdldCgncGFnZScpCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRyb3V0ZXIucmVzb2x2ZSh7CiAgICAgICAgICAgICAgICBuYW1lOiAncG9zdHMnLAogICAgICAgICAgICAgICAgcXVlcnk6IHtrZXl3b3JkLCBjYXRlZ29yeSwgcGFnZX0KICAgICAgICAgICAgfSkucm91dGUuZnVsbFBhdGgKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcEFjdGlvbnMoW1VQREFURV9QT1NUU10pLAogICAgICAgIGdldFBvc3RzKCkgewogICAgICAgICAgICBsZXQgcG9zdFVSTCA9IHRoaXMuJGh0dHBQb3N0cwogICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLiRyb3V0ZS5xdWVyeQogICAgICAgICAgICBjb25zdCBxdWVyeVN0cmluZyA9IE9iamVjdC5rZXlzKHBhcmFtcykubWFwKGtleSA9PiBrZXkgKyAnPScgKyBwYXJhbXNba2V5XSkuam9pbignJicpCiAgICAgICAgICAgIGlmIChxdWVyeVN0cmluZykgewogICAgICAgICAgICAgICAgcG9zdFVSTCArPSAnPycgKyBxdWVyeVN0cmluZwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuJGh0dHAocG9zdFVSTCwge2NyZWRlbnRpYWxzOiAiaW5jbHVkZSIsfSkKICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpc1tVUERBVEVfUE9TVFNdKGRhdGEpCiAgICAgICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICB9Cn0K"},{"version":3,"sources":["PostList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div :key=\"getKey\" class=\"container\">\n        <p id=\"lead\">{{postCount}}件中 {{postRangeFirst}}~{{postRangeLast}}件を一覧表示</p>\n        <section>\n            <router-link :to=\"{name: 'detail', params: {id: post.id}}\" v-for=\"post of postList\" :key=\"post.id\"\n                         class=\"post\">\n                <article>\n                    <figure>\n                        <img :src=\"post.thumbnail\" :alt=\"post.title\" class=\"thumbnail\">\n                    </figure>\n                    <p class=\"post-category\" :style=\"{'color': post.category.color}\">{{post.category.name}}</p>\n                    <h2 class=\"post-title\">{{post.title}}</h2>\n                    <p class=\"post-lead\">{{post.lead_text}}</p>\n                </article>\n            </router-link>\n        </section>\n        <hr class=\"divider\">\n        <nav id=\"page\">\n            <router-link v-if=\"hasPrevious\" :to=\"getPostPreviousURL\" id=\"back\"><img src=\"@/assets/back.png\">\n            </router-link>\n            <span>Page {{postCurrentPageNumber}}</span>\n            <router-link v-if=\"hasNext\" :to=\"getPostNextURL\" id=\"next\"><img src=\"@/assets/next.png\"></router-link>\n        </nav>\n    </div>\n</template>\n\n<script>\n    import {mapGetters, mapActions} from 'vuex'\n    import {UPDATE_POSTS} from \"@/store/mutation-types\";\n\n    export default {\n        name: 'post-list',\n        watch: {\n            '$route'() {\n                this.getPosts()\n            }\n        },\n        created() {\n            this.getPosts()\n        },\n        mounted() {\n            document.title = `ブログ`\n            document.querySelector('meta[name=\"description\"]').setAttribute('content', '日々の雑記ブログ')\n        },\n        computed: {\n            ...mapGetters([\n                'postList', 'postCount', 'postRangeFirst', 'postRangeLast',\n                'postCurrentPageNumber', 'hasPrevious', 'hasNext', 'getPreviousURL', 'getNextURL'\n            ]),\n            getKey() {\n                return `${this.postCurrentPageNumber} ${this.$route.query.keyword} ${this.$route.query.category}`\n            },\n            getPostPreviousURL() {\n                const url = new URL(this.getPreviousURL)\n                const keyword = url.searchParams.get('keyword') || ''\n                const category = url.searchParams.get('category') || ''\n                const page = url.searchParams.get('page') || 1\n                return this.$router.resolve({\n                    name: 'posts',\n                    query: {keyword, category, page}\n                }).route.fullPath\n            },\n            getPostNextURL() {\n                const url = new URL(this.getNextURL)\n                const keyword = url.searchParams.get('keyword') || ''\n                const category = url.searchParams.get('category') || ''\n                const page = url.searchParams.get('page')\n                return this.$router.resolve({\n                    name: 'posts',\n                    query: {keyword, category, page}\n                }).route.fullPath\n            }\n        },\n        methods: {\n            ...mapActions([UPDATE_POSTS]),\n            getPosts() {\n                let postURL = this.$httpPosts\n                const params = this.$route.query\n                const queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&')\n                if (queryString) {\n                    postURL += '?' + queryString\n                }\n                this.$http(postURL, {credentials: \"include\",})\n                    .then(response => {\n                        return response.json()\n                    })\n                    .then(data => {\n                        this[UPDATE_POSTS](data)\n                    })\n            },\n        }\n    }\n</script>\n\n<style scoped>\n    #lead {\n        color: #999999;\n    }\n\n    section {\n        margin-top: 80px;\n    }\n\n    .thumbnail {\n        width: 100%;\n        height: auto;\n        vertical-align: bottom;\n    }\n\n    .post {\n        text-decoration: none;\n        color: #000;\n        margin-bottom: 80px;\n        display: block;\n    }\n\n    .post-category {\n        margin-top: 15px;\n        font-size: 14px;\n        font-family: fot-tsukuardgothic-std, sans-serif;\n    }\n\n    .post-title {\n        font-weight: bold;\n        font-size: 18px;\n        width: 100%;\n        font-family: fot-tsukuardgothic-std, sans-serif;\n    }\n\n    .post-lead {\n        margin-top: 8px;\n        width: 100%;\n    }\n\n    .divider {\n        margin-top: 50px;\n        margin-bottom: 25px;\n        width: 100%;\n        height: 1px;\n        border: none;\n        background-color: #ccc;\n    }\n\n    #page {\n        color: #999;\n    }\n\n    #back {\n        width: 44px;\n        margin-right: 16px;\n        display: inline-block;\n    }\n\n    #next {\n        margin-left: 44px;\n        width: 44px;\n        display: inline-block;\n    }\n\n    @media (min-width: 768px) {\n        section {\n            display: grid;\n            grid-template-columns: 340px 340px;\n            column-gap: 20px;\n            row-gap: 100px;\n        }\n\n        .thumbnail {\n            width: 340px;\n            height: 212px;\n            object-fit: cover;\n        }\n\n        .post {\n            margin-bottom: 0;\n        }\n\n        .post-title {\n            width: 280px;\n        }\n\n        .post-lead {\n            width: 280px;\n        }\n\n        .divider {\n            width: 650px;\n        }\n    }\n\n    @media (min-width: 1024px) {\n        section {\n            grid-template-columns: 480px 480px;\n        }\n\n        .thumbnail {\n            width: 480px;\n            height: 300px;\n        }\n\n        .post-title {\n            width: 440px;\n        }\n\n        .post-lead {\n            width: 440px;\n        }\n    }\n</style>"]}]}